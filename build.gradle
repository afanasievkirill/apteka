apply plugin: 'java'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

repositories {
    mavenCentral()
}

configurations {
    agent
}

dependencies {
    compile 'org.testng:testng:7.0.0-beta1'
    compile 'org.seleniumhq.selenium:selenium-java:3.14.0'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    compile 'com.beust:jcommander:1.72'
    compile 'com.thoughtworks.xstream:xstream:1.4.10'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'mysql:mysql-connector-java:5.1.38'
    compile 'org.hibernate:hibernate-core:5.3.7.Final'
    compile 'org.json:json:20190722'
    implementation 'io.rest-assured:rest-assured:4.1.2'
    compile 'org.assertj:assertj-core:3.14.0'
    compile 'io.rest-assured:json-schema-validator:4.1.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    agent "org.aspectj:aspectjweaver:1.8.0"
    compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
}

sourceSets {
    main {
        java {
            srcDirs = ["src"]
            srcDir 'test'
        }
    }
}

task testWeb(type: Test) {
    useTestNG {
        suites 'src/test/resources/testCreateOrdersProduct.xml'

    }
    systemProperty "file.encoding", "utf-8"
}

task testRest(type: Test) {
    useTestNG {
        suites 'src/test/resources/testRestStage.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    testRest.doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }


}

task testVersion(type: Test) {
    useTestNG {
        suites 'src/test/resources/testGetPharmacyVersion.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }

    testRest.doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }


}